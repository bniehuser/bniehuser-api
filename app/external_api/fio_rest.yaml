openapi: 3.0.1
info:
  title: FIO API
  description: "FIO REST API. \nInstructions for testing the API:\n 1) Click on /auth/login\
    \ endpoint\n 2) Click the `Try it out` button\n 3) Enter your credentials into\
    \ the JSON payload\n 4) Copy the resultant value for `AuthToken` (the GUID inside\
    \ the quotes)\n 5) Click on `Authorize` and paste in the AuthToken\n 6) Commands\
    \ with the lock icon will now function, assuming appropriate parameters/settings\
    \ are present\n"
  contact:
    name: Saganaki
  license:
    name: MIT License
    url: https://choosealicense.com/licenses/mit/
  version: 1.0.0
servers:
  - url: https://rest.fnar.net/
tags:
  - name: auth
    description: Authentication
  - name: admin
    description: Administration - Requires admin account
  - name: building
    description: Building (BUI) information
  - name: chat
    description: Chat information
  - name: company
    description: Company information
  - name: contract
    description: Contract information
  - name: cxos
    description: Commodity exchange orders (CXOS) information
  - name: exchange
    description: Commodity exchange information
  - name: global
    description: Global game data
  - name: infrastructure
    description: Infrastructure information
  - name: localmarket
    description: Local Market information
  - name: material
    description: Material information
  - name: planet
    description: Planet information
  - name: production
    description: Production information
  - name: rain
    description: Rain google sheet helpers
  - name: recipes
    description: Recipes information
  - name: ship
    description: Ship information
  - name: sites
    description: Sites information
  - name: storage
    description: Storage information
  - name: systemstars
    description: SystemStars and WorldSectors information
  - name: user
    description: User information
  - name: usersettings
    description: UserSettings information
  - name: version
    description: Version information
  - name: workforce
    description: Workforce information
  - name: requiresAuth
    description: Requires the user be authenticated
  - name: requiresAdminAuth
    description: Requires the user be an admini and authenticated
  - name: permissionFlight
    description: Requires flight permission be assigned to you (does not apply is requesting
      data for yourself)
  - name: permissionBuilding
    description: Requires building permission be assigned to you (does not apply is
      requesting data for yourself)
  - name: permissionStorage
    description: Requires storage permission be assigned to you (does not apply is requesting
      data for yourself)
  - name: permissionProduction
    description: Requires flight production be assigned to you (does not apply is requesting
      data for yourself)
  - name: permissionWorkforce
    description: Requires workforce permission be assigned to you (does not apply is
      requesting data for yourself)
  - name: permissionExperts
    description: Requires experts permission be assigned to you (does not apply is requesting
      data for yourself)
  - name: permissionContracts
    description: Requires contracts permission be assigned to you (does not apply is
      requesting data for yourself)
  - name: permissionShipmentTracking
    description: Requires shipment tracking permission be assigned to you.
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Login to FIO
      description: |
        Authenticates against FIO.
        Any requests that require auth must have the response AuthToken as a HTTP header:
        `Authorization`:`<AUTH_TOKEN_HASH>`
      requestBody:
        description: Login and password for user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth_LoginAndPassword'
        required: true
      responses:
        200:
          description: Successfully authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth_LoginResponse'
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Failed to authenticate
          content: {}
      x-codegen-request-body-name: LoginAndPasswordPayload
  /auth:
    get:
      tags:
        - auth
        - requiresAuth
      summary: Determines if the user is authenticated
      responses:
        200:
          description: Authenticated
          content: {}
        401:
          description: Not authenticated
          content: {}
      security:
        - api_key: []
  /auth/permissions:
    get:
      tags:
        - auth
        - requiresAuth
      summary: Retrieves all permission allowances
      responses:
        200:
          description: Successfully retrieved permission allowances
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Auth_PermissionAllowance'
        401:
          description: User not authenticated
          content: {}
      security:
        - api_key: []
  /auth/visibility:
    get:
      tags:
        - auth
        - requiresAuth
      summary: Retrieves all allowances given to the user
      responses:
        200:
          description: Successfully retrieved all allowances given to the user
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Auth_PermissionAllowance'
        401:
          description: User not authenticated
          content: {}
      security:
        - api_key: []
  /auth/visibility/{PermissionType}:
    get:
      tags:
        - auth
        - requiresAuth
      summary: Retrieves all users where we have the permissionType specified given
        to us
      parameters:
        - name: PermissionType
          in: path
          description: The PermissionType
          required: true
          schema:
            type: string
            enum:
              - flight
              - building
              - storage
              - production
              - workforce
              - experts
              - contracts
              - shipmenttracking
      responses:
        200:
          description: Successfully retrieved list of users who have given us the
            permissionType specified
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: User not authenticated
          content: {}
      security:
        - api_key: []
  /auth/refreshauthtoken:
    post:
      tags:
        - auth
        - requiresAuth
      summary: Refreshes the user's auth token
      responses:
        200:
          description: Successfully refreshed and AuthToken expiry is now current
            time plus 24 hours
          content: {}
        400:
          description: Failed to find authentication model.  Internal server error
          content: {}
        401:
          description: User not authenticated
          content: {}
      security:
        - api_key: []
  /auth/changepassword:
    post:
      tags:
        - auth
        - requiresAuth
      summary: Changes the user's password
      requestBody:
        description: Old and new password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth_ChangePassword'
        required: true
      responses:
        200:
          description: Successfully changed password
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: User not authenticated
          content: {}
      security:
        - api_key: []
      x-codegen-request-body-name: ChangePasswordPayload
  /auth/addpermission:
    post:
      tags:
        - auth
        - requiresAuth
      summary: Add a permission allowance
      requestBody:
        description: A payload of a user and the permissions you grant them
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth_PermissionAllowance'
        required: true
      responses:
        200:
          description: Successfully added permission allowance
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: User not authenticated
          content: {}
        404:
          description: User specified not found
          content: {}
      security:
        - api_key: []
      x-codegen-request-body-name: PermissionAllowancePayload
  /auth/deletepermission/{UserName}:
    post:
      tags:
        - auth
        - requiresAuth
      summary: Delete a permission allowance
      parameters:
        - name: UserName
          in: path
          description: The UserName for which to delete the permission allowance
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully removed permission allowance
          content: {}
        401:
          description: User not authenticated
          content: {}
        404:
          description: User not present in permission allowance table
          content: {}
      security:
        - api_key: []
  /auth/createapikey:
    post:
      tags:
        - auth
        - requiresAuth
      summary: Creates an API key
      requestBody:
        description: The payload required for creating an API key.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Auth_CreateApiKey'
        required: true
      responses:
        200:
          description: Successfully created API key. Plaintext payload response
          content: {}
        400:
          description: Failed to parse payload or Application specified was empty
          content: {}
        401:
          description: Failed to authenticate
          content: {}
        406:
          description: Exceed 20 API key limit
          content: {}
      x-codegen-request-body-name: CreateApiKeyPayload
  /auth/revokeapikey:
    post:
      tags:
        - auth
        - requiresAuth
      summary: Revokes an API key
      requestBody:
        description: The payload required for revoking an API key.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Auth_RevokeApiKey'
        required: true
      responses:
        200:
          description: Successfully revoked API key
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Failed to authenticate
          content: {}
      x-codegen-request-body-name: RevokeApiKeyPayload
  /auth/listapikeys:
    post:
      tags:
        - auth
        - requiresAuth
      summary: Lists all API keys
      requestBody:
        description: The payload required for retrieving all API keys.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Auth_LoginAndPassword'
        required: true
      responses:
        200:
          description: Successfully revoked API key
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Failed to authenticate
          content: {}
      x-codegen-request-body-name: RevokeApiKeyPayload
  /admin:
    get:
      tags:
        - admin
        - requiresAdminAuth
      summary: Check if the user is an administrator
      responses:
        200:
          description: User is an admin
          content: {}
        401:
          description: Current user is not authenticated and/or not an administrator
          content: {}
      security:
        - api_key: []
  /admin/{UserName}:
    get:
      tags:
        - admin
        - requiresAdminAuth
      summary: Checks if the UserName provided exists
      parameters:
        - name: UserName
          in: path
          description: The username to check
          required: true
          schema:
            type: string
      responses:
        200:
          description: The username exists
          content: {}
        204:
          description: The username does not exist
          content: {}
        401:
          description: Current user is not authenticated and/or not an administrator
          content: {}
      security:
        - api_key: []
  /admin/allusers:
    get:
      tags:
        - admin
        - requiresAdminAuth
      summary: Retrieves a list of all usernames provided data from chat messages
      responses:
        200:
          description: Successfully retrieved a list of all users
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Current user is not authenticated and/or not an administrator
          content: {}
      security:
        - api_key: []
  /admin/usercount:
    get:
      tags:
        - admin
        - requiresAdminAuth
      summary: Retrieves a count of all usernames provided data from chat messages
      responses:
        200:
          description: Successfully retrieved a count of all users
          content:
            '*/*':
              schema:
                type: integer
        401:
          description: Current user is not authenticated and/or not an administrator
          content: {}
      security:
        - api_key: []
  /admin/requestdata:
    get:
      tags:
        - admin
        - requiresAdminAuth
      summary: Retrieves request data statistics for this run instance
      responses:
        200:
          description: Successfully retrieved request data statistics
          content: {}
      security:
        - api_key: []
  /admin/create:
    post:
      tags:
        - admin
        - requiresAdminAuth
      summary: Creates an account
      requestBody:
        description: New account information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_Create'
        required: true
      responses:
        200:
          description: User successfully created/overwritten
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated and/or not an administrator
          content: {}
      security:
        - api_key: []
      x-codegen-request-body-name: AdminCreatePayload
  /admin/disable:
    post:
      tags:
        - admin
        - requiresAdminAuth
      summary: Disables an account
      requestBody:
        description: Payload to disable an account with reason
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin_Disable'
        required: true
      responses:
        200:
          description: User successfully disabled
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated and/or not an administrator
          content: {}
      security:
        - api_key: []
      x-codegen-request-body-name: DisablePayload
  /admin/clearcxdata:
    post:
      tags:
        - admin
        - requiresAdminAuth
      summary: Clears all CX Data
      responses:
        200:
          description: Successfully cleared all CX data
          content: {}
        401:
          description: Current user is not authenticated and/or not an administrator
          content: {}
      security:
        - api_key: []
  /admin/clearmatdata:
    post:
      tags:
        - admin
        - requiresAdminAuth
      summary: Clears all MAT Data
      responses:
        200:
          description: Successfully cleared all MAT data
          content: {}
        401:
          description: Current user is not authenticated and/or not an administrator
          content: {}
      security:
        - api_key: []
  /admin/clearjumpcache:
    post:
      tags:
        - admin
        - requiresAdminAuth
      summary: Clears all JumpCache Data
      responses:
        200:
          description: Successfully cleared all JumpCache data
          content: {}
        401:
          description: Current user is not authenticated and/or not an administrator
          content: {}
      security:
        - api_key: []
  /admin/forceupdatesystemid:
    post:
      tags:
        - admin
        - requiresAdminAuth
      summary: Force update system ids (manual upgrade path)
      responses:
        200:
          description: Successfully force updated all PlanetDataModel systemids
          content: {}
        401:
          description: Current user is not authenticated and/or not an administrator
          content: {}
      deprecated: true
      security:
        - api_key: []
  /admin/resetuserdata/{UserName}:
    post:
      tags:
        - admin
        - requiresAdminAuth
      summary: Resets the provided username's userdata"
      parameters:
        - name: UserName
          in: path
          description: The UserName to reset
          required: true
          schema:
            type: string
      responses:
        200:
          description: The username's userdata was successfully reset
          content: {}
        400:
          description: The user doesn't exist
          content: {}
        401:
          description: Current user is not authenticated and/or not an administrator
          content: {}
      security:
        - api_key: []
  /building:
    post:
      tags:
        - building
        - requiresAuth
      summary: Posts building game data (WorldReactorData) to the server.  For payload,
        see FIORest source
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /building/allbuildings:
    get:
      tags:
        - building
      summary: Gets a list of all buildings (WorldReactorData).
      responses:
        200:
          description: Retrieval success.  For payload, try it out
          content: {}
  /building/{BuildingTicker}:
    get:
      tags:
        - building
      summary: Retrieve a payload describing the specified BuildingTicker
      parameters:
        - name: BuildingTicker
          in: path
          description: The building ticker to retrieve
          required: true
          schema:
            type: string
      responses:
        200:
          description: Retrieval success.  For payload, try it out
          content: {}
        204:
          description: Building not found
          content: {}
  /chat/data:
    post:
      tags:
        - chat
        - requiresAuth
      summary: Posts the CHANNEL_DATA payload to the server.  For payload, see FIORest
        source
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /chat/message_added:
    post:
      tags:
        - chat
        - requiresAuth
      summary: Posts the CHANNEL_MESSAGE_ADDED payload to the server.  For payload,
        see FIORest source
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /chat/message_deleted:
    post:
      tags:
        - chat
        - requiresAuth
      summary: Posts the CHANNEL_MESSAGE_DELETED payload to the server.  For payload,
        see FIORest source
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /chat/message_list:
    post:
      tags:
        - chat
        - requiresAuth
      summary: Posts the CHANNEL_MESSAGE_LIST payload to the server.  For payload,
        see FIORest source
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /chat/list:
    get:
      tags:
        - chat
      summary: Retrieves a list of searchable channel names and their corresponding
        ChannelIds
      responses:
        200:
          description: Successfully retrieved list of Channels
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chat_ListItem'
  /chat/display/{ChannelDescription}:
    get:
      tags:
        - chat
      summary: Retrieves the last 300 messages of the provided ChannelDescription
      parameters:
        - name: ChannelDescription
          in: path
          description: |
            The ChannelDescription.  Can be:
            1) ChannelId
            2) ChannelDisplayName
            2) PlanetName
            3) PlanetNaturalId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved channel data.  See FIORest source for
            payload
          content: {}
        204:
          description: Provided ChannelDescription was not recognized/did not match
          content: {}
  /chat/display/pretty/{ChannelDescription}:
    get:
      tags:
        - chat
      summary: Retrieves the last 300 messages of the provided ChannelDescription
        in a 'pretty' (textual) format
      parameters:
        - name: ChannelDescription
          in: path
          description: |
            The ChannelDescription.  Can be:
            1) ChannelId
            2) ChannelDisplayName
            2) PlanetName
            3) PlanetNaturalId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved channel data.  Response payload will
            be up to 300 most recent messages as plaintext
          content: {}
  /company:
    post:
      tags:
        - company
        - requiresAuth
      summary: Posts COMPANY_DATA payload.  For payload, see FIORest source
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /company/data:
    post:
      tags:
        - company
        - requiresAuth
      summary: Posts COMPANY_DATA_DATA payload.  For payload, see FIORest source
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /company/code/{CompanyCode}:
    get:
      tags:
        - company
        - requiresAuth
        - permissionStorage
      summary: Retrieves company data by CompanyCode
      parameters:
        - name: CompanyCode
          in: path
          description: The company code to lookup
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved company data.  See FIORest source for
            payload definition
          content: {}
        204:
          description: User specified not found
          content: {}
        401:
          description: Current user is not authenticated or does not have permission
            to view the data
          content: {}
      security:
        - api_key: []
  /company/name/{CompanyName}:
    get:
      tags:
        - company
        - requiresAuth
        - permissionStorage
      summary: Retrieves company data by CompanyName
      parameters:
        - name: CompanyName
          in: path
          description: The company name to lookup
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved company data.  See FIORest source for
            payload definition
          content: {}
        204:
          description: User specified not found
          content: {}
        401:
          description: Current user is not authenticated or does not have permission
            to view the data
          content: {}
      security:
        - api_key: []
  /contract:
    post:
      tags:
        - contract
        - requiresAuth
      summary: Posts CONTRACTS_CONTRACTS payload. See FIORest source for payload definition
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /contract/change:
    post:
      tags:
        - contract
        - requiresAuth
      summary: Posts CONTRACTS_CONTRACT payload. See FIORest source for payload definition
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /contract/allcontracts:
    get:
      tags:
        - contract
        - requiresAuth
      summary: Retrieves most recent 100 contracts for the current user
      responses:
        200:
          description: Successfully retrieved contracts payload.  See FIORest source
            for payload definition
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /contract/allcontracts/{UserName}:
    get:
      tags:
        - contract
        - requiresAuth
        - permissionContracts
      summary: Retrieves most recent 100 contracts for the given UserName
      parameters:
        - name: UserName
          in: path
          description: The UserName to lookup
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved contracts payload.  See FIORest source
            for payload definition
          content: {}
        401:
          description: Current user is not authenticated or does not have permission
          content: {}
      security:
        - api_key: []
  /contract/concerns:
    get:
      tags:
        - contract
        - requiresAuth
      summary: Retrieves contracts which can be extended or are within 1 day of ending
      responses:
        200:
          description: Successfully retrieved contracts payload.  See FIORest source
            for payload definition
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /contract/concerns/{UserName}:
    get:
      tags:
        - contract
        - requiresAuth
        - permissionContracts
      summary: Retrieves concerning contracts for the given UserName
      description: |
        Concerning contracts are defined as contracts which:
        1) Can be extended
        2) Are within 1 day of ending
      parameters:
        - name: UserName
          in: path
          description: The UserName to lookup
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved contracts payload.  See FIORest source
            for payload definition
          content: {}
        401:
          description: Current user is not authenticated or does not have permission
          content: {}
      security:
        - api_key: []
  /contract/loans:
    get:
      tags:
        - contract
        - requiresAuth
      summary: Retrieves loan contracts for the current user
      responses:
        200:
          description: Successfully retrieved contracts payload.  See FIORest source
            for payload definition
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /contract/loans/{UserName}:
    get:
      tags:
        - contract
        - requiresAuth
        - permissionContracts
      summary: Retrieves loan contracts for the given UserName
      parameters:
        - name: UserName
          in: path
          description: The UserName to lookup
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved contracts payload.  See FIORest source
            for payload definition
          content: {}
        401:
          description: Current user is not authenticated or does not have permission
          content: {}
      security:
        - api_key: []
  /contract/taco:
    get:
      tags:
        - contract
        - requiresAuth
        - permissionContracts
      summary: Retrieves taco statistics for EatTacos88
      responses:
        200:
          description: Successfully retrieved contracts payload.
          content: {}
        401:
          description: Current user is not authenticated or does not have permission
          content: {}
      security:
        - api_key: []
  /contract/shipments:
    get:
      tags:
        - contract
        - requiresAuth
        - permissionShipmentTracking
      summary: Retrieves information on the location of your shipments
      description: |
        This will retrieve the location of your shipment, assuming that user
        is also present on FIO and has given you the 'ShipmentTracking' permission
      responses:
        200:
          description: Successfully retrieved shipment tracking information.  See
            payload.
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /cxos:
    post:
      tags:
        - cxos
        - requiresAuth
      summary: Posts COMEX_TRADER_ORDERS data payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /cxos/added:
    post:
      tags:
        - cxos
        - requiresAuth
      summary: Posts COMEX_TRADER_ORDER_ADDED data payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /cxos/removed:
    post:
      tags:
        - cxos
        - requiresAuth
      summary: Posts COMEX_TRADER_ORDER_REMOVED data payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /cxos/updated:
    post:
      tags:
        - cxos
        - requiresAuth
      summary: Posts COMEX_TRADER_ORDER_UPDATED data payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /cxos/{UserName}:
    get:
      tags:
        - cxos
        - requiresAuth
        - permissionContracts
      summary: Retrieves CXOS data for provided username.  See FIORest source for
        payload definition
      parameters:
        - name: UserName
          in: path
          description: The username to lookup CXOS data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        204:
          description: User specified not found
          content: {}
        401:
          description: Current user is not authenticated or does not have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /exchange:
    post:
      tags:
        - exchange
        - requiresAuth
      summary: Posts COMEX_BROKER_DATA data payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /exchange/{ExchangeTicker}:
    get:
      tags:
        - exchange
      summary: Retrieves Exchange data for the provided ExchangeTicker
      parameters:
        - name: ExchangeTicker
          in: path
          description: 'Format: ''Material.ExchangeCode'''
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload.  See FIORest source for payload
            definition
          content: {}
        204:
          description: Ticker not found
          content: {}
  /global/comexexchanges:
    get:
      tags:
        - global
      summary: Retrieves COMEX_EXCHANGE_LIST data
      responses:
        200:
          description: Successfully retrieved
          content: {}
    post:
      tags:
        - global
        - requiresAdminAuth
      summary: Posts COMEX_EXCHANGE_LIST data
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated or isn't admin
          content: {}
      security:
        - api_key: []
  /global/countries:
    get:
      tags:
        - global
      summary: Retrieves COUNTRY_REGISTRY_COUNTRIES data
      responses:
        200:
          description: Successfully retrieved
          content: {}
    post:
      tags:
        - global
        - requiresAdminAuth
      summary: Posts COUNTRY_REGISTRY_COUNTRIES data
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated or isn't admin
          content: {}
      security:
        - api_key: []
  /global/simulationdata:
    get:
      tags:
        - global
      summary: Retrieves SIMULATION_DATA data
      responses:
        200:
          description: Successfully retrieved
          content: {}
    post:
      tags:
        - global
        - requiresAdminAuth
      summary: Posts SIMULATION_DATA data
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated or isn't admin
          content: {}
      security:
        - api_key: []
  /infrastructure:
    post:
      tags:
        - infrastructure
        - requiresAuth
      summary: Posts INFRASTRUCTURE_DATA_DATA data payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /infrastructure/project:
    post:
      tags:
        - infrastructure
        - requiresAuth
      summary: Posts INFRASTRUCTURE_PROJECTS_DATA data payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /infrastructure/{PlanetOrInfrastructureId}:
    get:
      tags:
        - infrastructure
      summary: Retrieves infrastucture payload for the given PlanetOrInfrastructureId
      parameters:
        - name: PlanetOrInfrastructureId
          in: path
          description: |
            The planet or infrastucture id.  Can be any of the following:
            1) PopulationId/InfrastructureId
            2) PlanetId
            3) PlanetNaturalId
            4) PlanetName
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload.  See FIORest source for payload
            definition
          content: {}
        204:
          description: Provided PlanetOrInfrastructureId was not found
          content: {}
  /localmarket:
    post:
      tags:
        - localmarket
        - requiresAuth
      summary: Posts LOCAL_MARKET_DATA_DATA data payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /localmarket/{LocalMarketId}:
    get:
      tags:
        - localmarket
      summary: Retrieves LocalMarket data for the provided LocalMarketId
      parameters:
        - name: LocalMarketId
          in: path
          description: The MarketId (see payload in FIORest)
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload.  See FIORest source for payload
            definition
          content: {}
        204:
          description: Provided LocalMarketId not found
          content: {}
  /localmarket/planet/{Planet}:
    get:
      tags:
        - localmarket
      summary: Retrieves LocalMarket data for provided Planet
      parameters:
        - name: Planet
          in: path
          description: |
            Can be any of the following:
            1) PlanetId
            2) PlanetNaturalId
            3) PlanetName
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload.  See FIORest source for payload
            definition
          content: {}
        204:
          description: Provided Planet not found or no ads present
          content: {}
  /localmarket/planet/{Planet}/{Type}:
    get:
      tags:
        - localmarket
      summary: Retrieves LocalMarket data for provided Planet and specified type
      parameters:
        - name: Planet
          in: path
          description: |
            Can be any of the following:
            1) PlanetId
            2) PlanetNaturalId
            3) PlanetName
          required: true
          schema:
            type: string
        - name: Type
          in: path
          description: |
            Can be any of the following:
            1) BUY | BUYS | BUYING
            2) SELL | SELLS | SELLING
            3) SHIP | SHIPPING
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload.  See FIORest source for payload
            definition
          content: {}
        204:
          description: Provided Planet not found or no ads present
          content: {}
  /localmarket/shipping/source/{SourcePlanet}:
    get:
      tags:
        - localmarket
      summary: Retrieves shipping LocalMarket data for the provided Planet where the
        pick-up location is SourcePlanet
      parameters:
        - name: SourcePlanet
          in: path
          description: |
            Can be any of the following:
            1) PlanetId
            2) PlanetNaturalId
            3) PlanetName
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload.  See FIORest source for payload
            definition
          content: {}
        204:
          description: Provided SourcePlanet not found or no ads found
          content: {}
  /localmarket/shipping/destination/{DestinationPlanet}:
    get:
      tags:
        - localmarket
      summary: Retrieves shipping LocalMarket data for the provided Planet where the
        drop-off location is DestinationPlanet
      parameters:
        - name: DestinationPlanet
          in: path
          description: |
            Can be any of the following:
            1) PlanetId
            2) PlanetNaturalId
            3) PlanetName
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload.  See FIORest source for payload
            definition
          content: {}
        204:
          description: Provided DestinationPlanet not found or no ads found
          content: {}
  /localmarket/company/{Company}:
    get:
      tags:
        - localmarket
      summary: Retrieves all ads found by specified Company
      parameters:
        - name: Company
          in: path
          description: |
            Can be any of the following:
            1) CompanyId
            2) CompanyId
            3) CompanyName
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload.  See FIORest source for payload
            definition
          content: {}
        204:
          description: Provided Company not found or no ads found by Company
          content: {}
  /material:
    post:
      tags:
        - material
        - requiresAuth
      summary: Posts WORLD_MATERIAL_CATEGORIES payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /material/allmaterials:
    get:
      tags:
        - material
        - requiresAuth
      summary: Retrieves all materials.  See FIORest source for payload definition
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
  /material/{MaterialTicker}:
    get:
      tags:
        - material
      summary: Retrieves an individual material by Ticker.  See FIORest source for
        payload definition
      parameters:
        - name: MaterialTicker
          in: path
          description: The Ticker of the material to retrieve
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        204:
          description: Ticker not found
          content: {}
  /material/category/{CategoryName}:
    get:
      tags:
        - material
      summary: Retrieves all materials that belong to the provided CategoryName. See
        FIORest source for payload definition
      parameters:
        - name: CategoryName
          in: path
          description: The CategoryName to retrieve
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        204:
          description: Category not found
          content: {}
  /planet:
    post:
      tags:
        - planet
        - requiresAuth
      summary: Posts PLANET_DATA_DATA payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /planet/cogc:
    post:
      tags:
        - planet
        - requiresAuth
      summary: Posts PLANET_COGC_DATA payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /planet/sites:
    post:
      tags:
        - planet
        - requiresAuth
      summary: Posts PLANET_SITES payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /planet/search:
    post:
      tags:
        - planet
      summary: Searches for a planet given the parameters in the payload
      requestBody:
        description: |
          The search parameters. Limitations:
          1) Only the first 4 entries in the Materials array will be considered
          2) Workforce populations (JobData) will not be present if not authenticated
          3) DistanceResults will not be present if not authenticated
          4) Only the first 3 entries in the DistanceChecks array will be considered
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Planet_SearchRequest'
        required: true
      responses:
        200:
          description: Successful
          content: {}
        400:
          description: Failed to parse payload
          content: {}
      security:
        - api_key: []
      x-codegen-request-body-name: PlanetSearchParameters
  /planet/allplanets:
    get:
      tags:
        - planet
        - requiresAuth
      summary: Retrieves a list of all planets (minimal payload)
      responses:
        200:
          description: Successfully retrieved list of all planets
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Planet_ListItem'
  /planet/{Planet}:
    get:
      tags:
        - planet
      summary: Retrieves planet payload.  See FIORest for payload definition
      parameters:
        - name: Planet
          in: path
          description: |
            Can be any of the following:
            1) PlanetId
            2) PlanetNaturalId
            3) PlanetName
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        204:
          description: Planet not found
          content: {}
  /planet/sites/{Planet}:
    get:
      tags:
        - planet
      summary: Retrieves the planet sites payload.  See FIORest for payload definition
      parameters:
        - name: Planet
          in: path
          description: |
            Can be any of the following:
            1) PlanetId
            2) PlanetNaturalId
            3) PlanetName
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        204:
          description: Planet not found
          content: {}
  /planet/sitescounts/{Planet}:
    get:
      tags:
        - planet
      summary: Retrieves the number of planet sites for the provided Planet
      parameters:
        - name: Planet
          in: path
          description: |
            Can be any of the following:
            1) PlanetId
            2) PlanetNaturalId
            3) PlanetName
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        204:
          description: Planet not found
          content: {}
  /production:
    post:
      tags:
        - production
        - requiresAuth
      summary: Posts PRODUCTION_SITE_PRODUCTION_LINES payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /production/{UserName}:
    get:
      tags:
        - production
        - requiresAuth
        - permissionProduction
      summary: Retrieve all production lines for provided UserName
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve production lines for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        204:
          description: Username has no production lines
          content: {}
        401:
          description: Current user is not authenticated or doesn't have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /production/planets/{UserName}:
    get:
      tags:
        - production
        - requiresAuth
        - permissionProduction
      summary: Retrieve all the planets where production lines are present for the
        provided UserName
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve a planet list for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        204:
          description: Username has no production lines
          content: {}
        401:
          description: Current user is not authenticated or doesn't have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /production/{UserName}/{Planet}:
    get:
      tags:
        - production
        - requiresAuth
        - permissionProduction
      summary: Retrieve production line for the given UserName on the specified Planet
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve a planet list for
          required: true
          schema:
            type: string
        - name: Planet
          in: path
          description: |
            The planet.  It can be any of the following:
            1) PlanetId
            2) PlanetNaturalId
            3) PlanetName
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  properties: {}
        204:
          description: Username has no production lines
          content: {}
        401:
          description: Current user is not authenticated or doesn't have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /rain/buildings:
    get:
      tags:
        - rain
      summary: Retrieves all building data
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_Building'
  /rain/buildingcosts:
    get:
      tags:
        - rain
      summary: Retrieves all building cost data (normalized)
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_BuildingCost'
  /rain/buildingworkforces:
    get:
      tags:
        - rain
      summary: Retrieves all building workforce data (normalized)
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_BuildingWorkforce'
  /rain/buildingrecipes:
    get:
      tags:
        - rain
      summary: Retrieves all building recipe data (normalized)
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_BuildingRecipe'
  /rain/materials:
    get:
      tags:
        - rain
      summary: Retrieves all material data
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_Material'
  /rain/prices:
    get:
      tags:
        - rain
      summary: Retrieves all CX price data
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_Prices'
  /rain/recipeinputs:
    get:
      tags:
        - rain
      summary: Retrieves all recipe input data (normalized)
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_RecipeInput'
  /rain/recipeoutputs:
    get:
      tags:
        - rain
      summary: Retrieves all recipe output data (normalized)
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_RecipeOutput'
  /rain/planetresources:
    get:
      tags:
        - rain
      summary: Retrieves all planet resource data (normalized)
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_PlanetResource'
  /rain/userliquid/{UserName}:
    get:
      tags:
        - rain
        - requiresAuth
        - permissionStorage
      summary: Retrieves liquid asset data for the given UserName
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_Liquid'
        204:
          description: No data available for the UserName
          content: {}
        401:
          description: Current user is not authenticated or does not have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /rain/userplanets/{UserName}:
    get:
      tags:
        - rain
        - requiresAuth
        - permissionStorage
      summary: Retrieves planets for the given UserName
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_UserPlanet'
        204:
          description: No data available for the UserName
          content: {}
        401:
          description: Current user is not authenticated or does not have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /rain/userplanetbuildings/{UserName}:
    get:
      tags:
        - rain
        - requiresAuth
        - permissionBuilding
      summary: Retrieves planet buildings for the given UserName
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_PlanetBuilding'
        204:
          description: No data available for the UserName
          content: {}
        401:
          description: Current user is not authenticated or does not have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /rain/userplanetbuildingreclaimables/{UserName}:
    get:
      tags:
        - rain
        - requiresAuth
        - permissionBuilding
      summary: Retrieves planet building reclaimables for the given UserName
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_PlanetBuildingReclaimable'
        204:
          description: No data available for the UserName
          content: {}
        401:
          description: Current user is not authenticated or does not have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /rain/userplanetproduction/{UserName}:
    get:
      tags:
        - rain
        - requiresAuth
        - permissionProduction
      summary: Retrieves planet production for the given UserName
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_PlanetProduction'
        204:
          description: No data available for the UserName
          content: {}
        401:
          description: Current user is not authenticated or does not have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /rain/userplanetproductioninput/{UserName}:
    get:
      tags:
        - rain
        - requiresAuth
        - permissionProduction
      summary: Retrieves planet production inputs for the given UserName
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_PlanetProductionInput'
        204:
          description: No data available for the UserName
          content: {}
        401:
          description: Current user is not authenticated or does not have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /rain/userplanetproductionoutput/{UserName}:
    get:
      tags:
        - rain
        - requiresAuth
        - permissionProduction
      summary: Retrieves planet production outputs for the given UserName
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_PlanetProductionOutput'
        204:
          description: No data available for the UserName
          content: {}
        401:
          description: Current user is not authenticated or does not have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /rain/userplanetworkforce/{UserName}:
    get:
      tags:
        - rain
        - requiresAuth
        - permissionWorkforce
      summary: Retrieves planet production workforces for the given UserName
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_PlanetWorkforce'
        204:
          description: No data available for the UserName
          content: {}
        401:
          description: Current user is not authenticated or does not have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /rain/userstorage/{UserName}:
    get:
      tags:
        - rain
        - requiresAuth
        - permissionStorage
      summary: Retrieves planet production workforces for the given UserName
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rain_Storage'
        204:
          description: No data available for the UserName
          content: {}
        401:
          description: Current user is not authenticated or does not have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /recipes/allrecipes:
    get:
      tags:
        - recipes
        - requiresAuth
      summary: Retrieve all recipes
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe_MinimalRecipe'
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /ship/ships:
    post:
      tags:
        - ship
        - requiresAuth
      summary: Posts SHIP_SHIPS payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /ship/flights:
    post:
      tags:
        - ship
        - requiresAuth
      summary: Posts SHIP_FLIGHT_FLIGHTS payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /ship/ships/{UserName}:
    get:
      tags:
        - ship
        - requiresAuth
        - permissionFlight
      summary: Retrieves ship data
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve ship data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        204:
          description: Username has no ship data
          content: {}
        401:
          description: Current user is not authenticated or doesn't have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /ship/ships/fuel/{UserName}:
    get:
      tags:
        - ship
        - requiresAuth
        - permissionFlight
      summary: Retrieves ship fuel store data
      parameters:
        - name: UserName
          in: path
          description: The username to ship stl/ftl store models for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        401:
          description: Current user is not authenticated or doesn't have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /ship/flights/{UserName}:
    get:
      tags:
        - ship
        - requiresAuth
        - permissionFlight
      summary: Retrieves ship flight data
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve flight data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        204:
          description: Username has no flight data
          content: {}
        401:
          description: Current user is not authenticated or doesn't have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /sites:
    post:
      tags:
        - sites
        - requiresAuth
      summary: Posts SITE_SITES payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /sites/warehouses:
    post:
      tags:
        - sites
        - requiresAuth
      summary: Posts STORAGE_WAREHOUSES payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /sites/{UserName}:
    get:
      tags:
        - sites
        - requiresAuth
        - permissionBuilding
      summary: Retrieves site data
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve site data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        204:
          description: Username has no site data
          content: {}
        401:
          description: Current user is not authenticated or doesn't have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /sites/planets/{UserName}:
    get:
      tags:
        - sites
        - requiresAuth
        - permissionBuilding
      summary: Retrieves list of planets user has site data for
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve site data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload.  List of PlanetId returned
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        204:
          description: Username has no site data
          content: {}
        401:
          description: Current user is not authenticated or doesn't have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /sites/{UserName}/{Planet}:
    get:
      tags:
        - sites
        - requiresAuth
        - permissionBuilding
      summary: Retrieves list of planets user has site data for
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve site data for
          required: true
          schema:
            type: string
        - name: Planet
          in: path
          description: |
            Can be any of the following:
            1) PlanetId
            2) PlanetNaturalId
            3) PlanetName
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload.  Site data for specified Planet
          content: {}
        204:
          description: Username has no site data for provided Planet
          content: {}
        401:
          description: Current user is not authenticated or doesn't have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /sites/warehouses/{UserName}:
    get:
      tags:
        - sites
        - requiresAuth
        - permissionBuilding
      summary: Retrieves all warehouse sites the user has
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve site data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload.  Site data for specified Planet
          content: {}
        401:
          description: Current user is not authenticated or doesn't have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /storage:
    post:
      tags:
        - sites
        - requiresAuth
      summary: Posts STORAGE_STORAGES payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /storage/change:
    post:
      tags:
        - storage
        - requiresAuth
      summary: Posts STORAGE_CHANGE payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /storage/{UserName}:
    get:
      tags:
        - storage
        - requiresAuth
        - permissionStorage
      summary: Retrieves storage data
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve storage data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        204:
          description: Username has no storage data
          content: {}
        401:
          description: Current user is not authenticated or doesn't have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /storage/planets/{UserName}:
    get:
      tags:
        - storage
        - requiresAuth
        - permissionStorage
      summary: Retrieves list of Planets where storage data exists for UserName
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve storage data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        204:
          description: Username has no storage data
          content: {}
        401:
          description: Current user is not authenticated or doesn't have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /storage/{UserName}/{StorageDescription}:
    get:
      tags:
        - storage
        - requiresAuth
        - permissionStorage
      summary: Retrieves list of Planets where storage data exists for UserName
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve storage data for
          required: true
          schema:
            type: string
        - name: StorageDescription
          in: path
          description: |
            Can be any of the following:
            1) StorageId
            2) PlanetId
            3) PlanetNaturalId
            4) PlanetName
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        204:
          description: Username has no storage data
          content: {}
        401:
          description: Current user is not authenticated or doesn't have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /systemstars:
    get:
      tags:
        - systemstars
        - requiresAuth
      summary: Retrieves system star data
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
    post:
      tags:
        - systemstars
        - requiresAdminAuth
      summary: Posts SYSTEM_STARS_DATA payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /systemstars/worldsectors:
    get:
      tags:
        - systemstars
        - requiresAuth
      summary: Retrieves world sector data
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
    post:
      tags:
        - systemstars
        - requiresAdminAuth
      summary: Posts WORLD_SECTORS payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /systemstars/jumpcount/{Source}/{Destination}:
    get:
      tags:
        - systemstars
        - requiresAuth
      summary: Retrieves jump count from source to destination specified
      parameters:
        - name: Source
          in: path
          description: |
            Can be any of the following:
            1) SystemId (XK-745)
            2) PlanetId
            3) PlanetNaturalId
            4) PlanetName
          required: true
          schema:
            type: string
        - name: Destination
          in: path
          description: |
            Can be any of the following:
            1) SystemId (XK-745)
            2) PlanetId
            3) PlanetNaturalId
            4) PlanetName
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            '*/*':
              schema:
                type: integer
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /systemstars/jumproute/{Source}/{Destination}:
    get:
      tags:
        - systemstars
        - requiresAuth
      summary: Retrieves jump route from source to destination specified
      parameters:
        - name: Source
          in: path
          description: |
            Can be any of the following:
            1) SystemId (XK-745)
            2) PlanetId
            3) PlanetNaturalId
            4) PlanetName
          required: true
          schema:
            type: string
        - name: Destination
          in: path
          description: |
            Can be any of the following:
            1) SystemId (XK-745)
            2) PlanetId
            3) PlanetNaturalId
            4) PlanetName
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SystemStars_JumpRoute'
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /systemstars/star:
    post:
      tags:
        - systemstars
        - requiresAuth
      summary: Posts SYSTEM_STAR data
      responses:
        200:
          description: Success
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /systemstars/star/{Star}:
    get:
      tags:
        - systemstars
      summary: Retrieves SYSTEM_STAR data provided a Star definition
      parameters:
        - name: Star
          in: path
          description: |
            Can be any of the following:
            1) SystemId (hash)
            2) SystemName (Benten)
            3) SystemNaturalId (XK-745)
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content: {}
        204:
          description: Star definition not found
          content: {}
  /user:
    post:
      tags:
        - user
        - requiresAuth
      summary: Posts USER_DATA payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /user/allusers:
    get:
      tags:
        - user
        - requiresAuth
      summary: Retrieves all FIO users
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /user/{UserName}:
    get:
      tags:
        - user
        - requiresAuth
      summary: Retrieves userdata for specified UserName
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve user data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /user/resetalldata:
    post:
      tags:
        - user
        - requiresAuth
      summary: Resets the current user's data.
      description: |
        This will delete the following data for your User:
        1) Company data
        2) ProductionLine data
        3) Ship data
        4) Site data
        5) Workforce data
        6) User data
        7) Warehouse data
        8) Contract data

        You should only use this if your data has been corrupted by excess hydration timeouts
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /usersettings/general:
    get:
      tags:
        - usersettings
        - requiresAuth
      summary: Currently unused.  Will be used in the future
      responses:
        200:
          description: Success
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
    post:
      tags:
        - usersettings
        - requiresAuth
      summary: Currently unused.  Will be used in the future
      responses:
        200:
          description: Success
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /usersettings/general/{UserName}:
    get:
      tags:
        - usersettings
        - requiresAuth
      summary: Currently unused.  Will be used in the future
      parameters:
        - name: UserName
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /usersettings/burnrate/addexclusion:
    post:
      tags:
        - usersettings
        - requiresAuth
      summary: Adds a BurnRateExclusion
      requestBody:
        description: A BurnRateExclusion
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSettings_BurnRate_Exclusion'
        required: true
      responses:
        200:
          description: Success
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      x-codegen-request-body-name: BurnRateExclusion
  /usersettings/burnrate/deleteexclusion:
    post:
      tags:
        - usersettings
        - requiresAuth
      summary: Deletes a BurnRateExclusion
      requestBody:
        description: A BurnRateExclusion
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSettings_BurnRate_Exclusion'
        required: true
      responses:
        200:
          description: Success
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      x-codegen-request-body-name: BurnRateExclusion
  /usersettings/burnrate/{UserName}:
    get:
      tags:
        - usersettings
        - requiresAuth
        - permissionWorkforce
        - permissionStorage
      summary: Retrieves BurnRateSettings for the specified user
      parameters:
        - name: UserName
          in: path
          description: The UserName to retrieve BurnRate settings for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /usersettings/burnrate/{UserName}/{PlanetNaturalId}:
    get:
      tags:
        - usersettings
        - requiresAuth
        - permissionWorkforce
        - permissionStorage
      summary: Retrivies BurnRateSettings for the specified user on the specified
        planet
      parameters:
        - name: UserName
          in: path
          description: The UserName to retrieve BurnRate settings for
          required: true
          schema:
            type: string
        - name: PlanetNaturalId
          in: path
          description: The PlanetNaturalId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content: {}
        401:
          description: Current user is not authenticated or does not have appropriate
            permissiosn
          content: {}
      security:
        - api_key: []
  /usersettings/burnrate/yellowthreshold:
    post:
      tags:
        - usersettings
        - requiresAuth
      summary: Currently unused.  Will be used in the future
      responses:
        200:
          description: Success
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /usersettings/burnrate/redthreshold:
    post:
      tags:
        - usersettings
        - requiresAuth
      summary: Currently unused.  Will be used in the future
      responses:
        200:
          description: Success
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /version/latest:
    get:
      tags:
        - version
      summary: Retrieves latest version number of the FIOUI
      responses:
        200:
          description: Success
          content:
            '*/*':
              schema:
                type: string
        204:
          description: No version file present
          content: {}
  /version/releasenotes:
    get:
      tags:
        - version
      summary: Retrieves latest version release notes of the FIOUI as an rtf file
      responses:
        200:
          description: Success
          content: {}
        204:
          description: No version file present
          content: {}
  /version/download:
    get:
      tags:
        - version
      summary: Retrieves latest FIOUI setup executable
      responses:
        200:
          description: Success
          content: {}
        204:
          description: No version file present
          content: {}
  /version/extension/download:
    get:
      tags:
        - version
      summary: Redirects you to to the FIO Chrome Extension page
      responses:
        200:
          description: Success
          content: {}
  /version/extension/script:
    get:
      tags:
        - version
      summary: Retrieves the latest version of the FIO uploader script
      responses:
        200:
          description: Success
          content: {}
        204:
          description: Uploader script not found
          content: {}
  /workforce:
    post:
      tags:
        - workforce
        - requiresAuth
      summary: Posts WORKFORCE_WORKFORCES payload
      responses:
        200:
          description: Successfully posted
          content: {}
        400:
          description: Failed to parse payload
          content: {}
        401:
          description: Current user is not authenticated
          content: {}
      security:
        - api_key: []
  /workforce/{UserName}:
    get:
      tags:
        - workforce
        - requiresAuth
        - permissionWorkforce
      summary: Retrieves workforce data for the specified user
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve workforce data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        204:
          description: Specified user has no workforce data
          content: {}
        401:
          description: Current user is not authenticated or does not have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /workforce/planets/{UserName}:
    get:
      tags:
        - workforce
        - requiresAuth
        - permissionWorkforce
      summary: Retrieves list of planets where the specified user has Workforce data
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve workforce data for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        204:
          description: Specified user has no workforce data
          content: {}
        401:
          description: Current user is not authenticated or does not have appropriate
            permissions
          content: {}
      security:
        - api_key: []
  /workforce/{UserName}/{Planet}:
    get:
      tags:
        - workforce
        - requiresAuth
        - permissionWorkforce
      summary: Retrieves workforce data for the specified usernaem and planet
      parameters:
        - name: UserName
          in: path
          description: The username to retrieve workforce data for
          required: true
          schema:
            type: string
        - name: Planet
          in: path
          description: |
            Can be any of the following:
            1) PlanetId
            2) PlanetNaturalId
            3) PlanetName
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved payload
          content: {}
        204:
          description: Specified user has no workforce data
          content: {}
        401:
          description: Current user is not authenticated or does not have appropriate
            permissions
          content: {}
      security:
        - api_key: []
components:
  schemas:
    Auth_LoginAndPassword:
      required:
        - Password
        - UserName
      type: object
      properties:
        UserName:
          type: string
          example: Saganaki
        Password:
          type: string
          example: Hunter2
    Auth_LoginResponse:
      type: object
      properties:
        AuthToken:
          type: string
          example: f6639c30d1a647b8937da9874bf1ec10
        Expiry:
          type: string
          example: 2021-01-19T17:10:57.8648344Z
        IsAdministrator:
          type: boolean
          example: false
    Auth_ChangePassword:
      type: object
      properties:
        OldPassword:
          type: string
          example: OldPassword
        NewPassword:
          type: string
          example: Hunter2
    Auth_PermissionAllowance:
      type: object
      properties:
        UserName:
          type: string
          example: Saganaki
        FlightData:
          type: boolean
          example: false
        BuildingData:
          type: boolean
          example: true
        StorageData:
          type: boolean
          example: true
        ProductionData:
          type: boolean
          example: false
        WorkforceData:
          type: boolean
          example: true
        ExpertsData:
          type: boolean
          example: true
        ContractData:
          type: boolean
          example: false
        ShipmentTracking:
          type: boolean
          example: false
    Auth_CreateApiKey:
      type: object
      properties:
        UserName:
          type: string
          example: Saganaki
        Password:
          type: string
          example: Hunter2
        Application:
          type: string
          example: FIOWeb-Chrome
    Auth_RevokeApiKey:
      type: object
      properties:
        UserName:
          type: string
          example: Saganaki
        Password:
          type: string
          example: Hunter2
        ApiKeyToRevoke:
          type: string
          example: e04e2e9f-e970-4253-8349-45c33a54d42e
    Admin_Create:
      type: object
      properties:
        UserName:
          type: string
          example: Saganaki
        Password:
          type: string
          example: Hunter2
        IsAdmin:
          type: boolean
          example: false
    Admin_Disable:
      type: object
      properties:
        UserName:
          type: string
          example: Saganaki
        Reason:
          type: string
          example: This user was disabled because they abused the API
    Chat_ListItem:
      type: object
      properties:
        DisplayName:
          type: string
          example: CR-701a Global Site Owners
        ChannelId:
          type: string
          example: 7a581ed1c9d891f1e372a280b5d77b5c
    Planet_ListItem:
      type: object
      properties:
        PlanetNaturalId:
          type: string
          example: XK-745b
        PlanetName:
          type: string
          example: Katoa
    Planet_SearchRequest:
      type: object
      properties:
        Materials:
          type: array
          example: '["FEO, LST"]'
          items:
            type: string
        IncludeRocky:
          type: boolean
          example: true
        IncludeGaseous:
          type: boolean
          example: true
        IncludeLowGravity:
          type: boolean
          example: true
        IncludeHighGravity:
          type: boolean
          example: false
        IncludeLowPressure:
          type: boolean
          example: true
        IncludeHighPressure:
          type: boolean
          example: false
        IncludeLowTemperature:
          type: boolean
          example: true
        IncludeHighTemperature:
          type: boolean
          example: false
        MustBeFertile:
          type: boolean
          example: true
        MustHaveLocalMarket:
          type: boolean
          example: true
        MustHaveChamberOfCommerce:
          type: boolean
          example: false
        MustHaveWarehouse:
          type: boolean
          example: true
        MustHaveAdministrationCenter:
          type: boolean
          example: true
        MustHaveShipyard:
          type: boolean
          example: false
        DistanceChecks:
          type: array
          example: '["Katoa, Promitor, Montem"]'
          items:
            type: string
    Rain_Building:
      type: object
      properties:
        Ticker:
          type: string
          example: FP
        Name:
          type: string
          example: foodProcessor
        Area:
          type: integer
          example: 42
        Expertise:
          type: string
          example: FOOD_INDUSTRIES
    Rain_BuildingCost:
      type: object
      properties:
        Key:
          type: string
          example: FP-BSE
        Building:
          type: string
          example: FP
        Material:
          type: string
          example: BSE
        Amount:
          type: integer
          example: 3
    Rain_BuildingWorkforce:
      type: object
      properties:
        Key:
          type: string
          example: FP-PIONEER
        Building:
          type: string
          example: FP
        Level:
          type: string
          example: PIONEER
        Capacity:
          type: integer
          example: 40
    Rain_BuildingRecipe:
      type: object
      properties:
        Key:
          type: string
          example: FP-COF
        Building:
          type: string
          example: FP
        Duration:
          type: integer
          example: 25920000
    Rain_Material:
      type: object
      properties:
        Ticker:
          type: string
          example: BSE
        Name:
          type: string
          example: basicStructuralElements
        Category:
          type: string
          example: onstruction prefabs
        Weight:
          type: number
          example: 0.3
        Volume:
          type: number
          example: 0.5
    Rain_Prices:
      type: object
      properties:
        Ticker:
          type: string
          description: The Ticker
          example: RCO
        MMBuy:
          type: number
          description: The Market Maker buy (if present)
          example: 399.99
        MMSell:
          type: number
          description: The Market Maker sell (if present)
        CI1-Average:
          type: number
          description: The price average of the material on the CI1 exchange
          example: 681.05
        CI1-AskAmt:
          type: integer
          description: The amount of items available for the lowest asking price
          example: 100
        CI1-AskPrice:
          type: number
          description: The lowest asking price
          example: 699.99
        CI1-AskAvail:
          type: integer
          description: The amount of items listed available for buy across all ads
          example: 255
        CI1-BidAmt:
          type: integer
          description: The amount of items requested for the highest bid price
          example: 4
        CI1-BidPrice:
          type: number
          description: The highest bid price
          example: 545.01
        CI1-BidAvail:
          type: integer
          description: The amount of items requesting to buy across all ads
          example: 995
        NI1-Average:
          type: number
          description: The price average of the material on the NC1 exchange
          example: 681.05
        NI1-AskAmt:
          type: integer
          description: The amount of items available for the lowest asking price
          example: 100
        NI1-AskPrice:
          type: number
          description: The lowest asking price
          example: 699.99
        NI1-AskAvail:
          type: integer
          description: The amount of items listed available for buy across all ads
          example: 255
        NI1-BidAmt:
          type: integer
          description: The amount of items requested for the highest bid price
          example: 4
        NI1-BidPrice:
          type: number
          description: The highest bid price
          example: 545.01
        NI1-BidAvail:
          type: integer
          description: The amount of items requesting to buy across all ads
          example: 995
        IC1-Average:
          type: number
          description: The price average of the material on the IC1 exchange
          example: 681.05
        IC1-AskAmt:
          type: integer
          description: The amount of items available for the lowest asking price
          example: 100
        IC1-AskPrice:
          type: number
          description: The lowest asking price
          example: 699.99
        IC1-AskAvail:
          type: integer
          description: The amount of items listed available for buy across all ads
          example: 255
        IC1-BidAmt:
          type: integer
          description: The amount of items requested for the highest bid price
          example: 4
        IC1-BidPrice:
          type: number
          description: The highest bid price
          example: 545.01
        IC1-BidAvail:
          type: integer
          description: The amount of items requesting to buy across all ads
          example: 995
    Rain_RecipeInput:
      type: object
      properties:
        Key:
          type: string
          example: FP-COF
        Material:
          type: string
          example: CAF
        Amount:
          type: integer
          example: 1
    Rain_RecipeOutput:
      type: object
      properties:
        Key:
          type: string
          example: FP-COF
        Material:
          type: string
          example: COF
        Amount:
          type: integer
          example: 3
    Rain_PlanetResource:
      type: object
      properties:
        Key:
          type: string
          example: CR-409b-SIO
        Planet:
          type: string
          example: CR-409b
        Ticker:
          type: string
          example: SIO
        Type:
          type: string
          description: |
            Can be any of the following:
            1) MINERAL
            2) LIQUID
            3) GASEOUS
          example: MINERAL
        Factor:
          type: number
          description: |
            The factor at which extraction occurrs.  To get daily extraction:
            - GASEOUS: Factor * 0.60
            - LIQUID: Factor * 0.70
            - MINERAL: Factor * 0.70
          example: 0.5979242920875549
    Rain_Liquid:
      type: object
      properties:
        Source:
          type: string
          example: WALLET.IC1
        Currency:
          type: string
          example: ICA
        Amount:
          type: number
          example: 1888.9928
    Rain_UserPlanet:
      type: object
      properties:
        NaturalId:
          type: string
          example: CR-409e
        Name:
          type: string
          description: Name will match NaturalId if the planet is not named
          example: Promitor
    Rain_PlanetBuilding:
      type: object
      properties:
        NaturalId:
          type: string
          example: CR-409e
        Id:
          type: string
          description: The right-hand side hash is the first 8 characters of the BuildingId
          example: FP-A7055081
        Ticker:
          type: string
          example: FP
        Created:
          type: integer
          description: This is a long integer which represents epoch time in milliseconds
          example: 1607137698677
        Condition:
          type: number
          description: The condition of the building
          example: 0.9949163198
    Rain_PlanetBuildingReclaimable:
      type: object
      properties:
        BuildingId:
          type: string
          description: The right-hand side hash is the first 8 characters of the BuildingId
          example: FP-A7055081
        Material:
          type: string
          example: BSE
        Amount:
          type: integer
          example: 1
    Rain_PlanetProduction:
      type: object
      properties:
        NaturalId:
          type: string
          example: CR-409e
        Type:
          type: string
          description: The building name (not Ticker)
          example: foodProcessor
        Id:
          type: string
          description: The right-hand side hash is the first 8 characters of the Production
            id
          example: CR-409e-foodProcessor-D018E07B
        Completed:
          type: number
          description: Percentage complete of this production line
          example: 0.3699975014
        Remaining:
          type: integer
          description: The amount of time remaining until production completion in
            milliseconds
          example: 1685859
    Rain_PlanetProductionInput:
      type: object
      properties:
        OrderId:
          type: string
          description: The right-hand side hash is the first 8 characters of the Production
            id
          example: CR-409e-farm-40C19008
        Material:
          type: string
          example: H2O
        Count:
          type: integer
          example: 6
    Rain_PlanetProductionOutput:
      type: object
      properties:
        OrderId:
          type: string
          description: The right-hand side hash is the first 8 characters of the Production
            id
          example: CR-409e-farm-40C19008
        Material:
          type: string
          example: BEA
        Count:
          type: integer
          example: 4
    Rain_PlanetWorkforce:
      type: object
      properties:
        NaturalId:
          type: string
          example: CR-409e
        Workforce:
          type: string
          example: PIONEER
        Population:
          type: integer
          example: 120
        Capacity:
          type: integer
          example: 200
        Required:
          type: integer
          example: 120
        Satisfaction:
          type: number
          example: 0.8666666746
    Rain_Storage:
      type: object
      properties:
        NaturalId:
          type: string
          example: CR-409e
        Name:
          type: string
          example: Promitor
        Type:
          type: string
          example: STORE
        Ticker:
          type: string
          example: H2O
        Amount:
          type: integer
          example: 225
    Recipe_MinimalRecipe:
      type: object
      properties:
        BuildingTicker:
          type: string
          example: FP
        RecipeName:
          type: string
          example: 1xGRN 1xBEA 1xNUT = 10xRAT
        Inputs:
          type: array
          items:
            $ref: '#/components/schemas/Recipe_MinimalInput'
        Outputs:
          type: array
          items:
            $ref: '#/components/schemas/Recipe_MinimalOutput'
        TimeMs:
          type: integer
          description: Time in milliseconds
          example: 21600000
    Recipe_MinimalInput:
      type: object
      properties:
        Ticker:
          type: string
          example: GRN
        Amount:
          type: integer
          example: 1
    Recipe_MinimalOutput:
      type: object
      properties:
        Ticker:
          type: string
          example: RAT
        Amount:
          type: integer
          example: 10
    SystemStars_JumpRoute:
      type: object
      properties:
        SourceSystemId:
          type: string
          example: cf135f115b2b0f268b19ce3626637248
        SourceSystemName:
          type: string
          example: Daikoku
        SourceSystemNaturalId:
          type: string
          example: WN-506
        DestinationSystemId:
          type: string
          example: bb0450c417f7623f5bac4bd779b9a8b9
        DestinationSystemName:
          type: string
          example: WN-428
        DestinationSystemNaturalId:
          type: string
          example: WN-428
        Distance:
          type: number
          description: Distance is in parsecs
          example: 50.95398174301303
    UserSettings_BurnRate_Exclusion:
      type: object
      properties:
        PlanetNaturalId:
          type: string
          example: XK-745b
        MaterialTicker:
          type: string
          example: COF
  securitySchemes:
    api_key:
      type: apiKey
      name: Authorization
      in: header
